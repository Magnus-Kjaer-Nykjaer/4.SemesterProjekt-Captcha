// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.ML;
using Microsoft.OpenApi.Models;
using System.Drawing;
using System.IO;
using System.Threading.Tasks;
using Captcha.MLImageCompare_Api;

// Configure app
var builder = WebApplication.CreateBuilder(args);

builder.Services.AddPredictionEnginePool<MLImage.ModelInput, MLImage.ModelOutput>()
    .FromFile("MLImage.zip");
builder.Services.AddEndpointsApiExplorer();

builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new OpenApiInfo { Title = "MLAPI", Description = "ML image compare API", Version = "v1" });
});
var app = builder.Build();

app.UseSwagger();

app.UseSwaggerUI(c =>
{
    c.SwaggerEndpoint("/swagger/v1/swagger.json", "MLAPI V1");
});

// Define prediction route & handler
app.MapPost("/predict",
    async (PredictionEnginePool<MLImage.ModelInput, MLImage.ModelOutput> predictionEnginePool, string imagePath) =>
    {
        var input = new MLImage.ModelInput()
        {
            ImageSource = File.ReadAllBytes(imagePath),
        };

        return await Task.FromResult(predictionEnginePool.Predict(input));
    });
